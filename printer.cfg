[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_260042000750534E4E313120-if00
restart_method: command
##--------------------------------------------------------------------

[mcu host]
serial: /tmp/klipper_host_mcu

[z_calibration]
# NOTE: also modify klicky-variables.cfg
nozzle_xy_position: 233.3, 346.5
switch_xy_position: 229.0, 324.0
# Decreasing the "switch_offset" will move the nozzle away from the bed.
switch_offset: 0.50
speed: 250
start_gcode: ATTACH_PROBE
end_gcode: DOCK_PROBE

[gcode_arcs]
[exclude_object]

[printer]
kinematics: corexy
max_velocity: 450
max_accel: 6000
max_accel_to_decel: 6000
max_z_velocity: 16          # Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 8.0

[idle_timeout]
timeout: 36000

[input_shaper]
shaper_freq_x: 48.4
shaper_type_x: mzv
shaper_freq_y: 36.6
shaper_type_y: mzv

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  X Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6

position_min: 0
position_endstop: 351
position_max: 351

homing_speed: 100
second_homing_speed: 15
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.9
stealthchop_threshold: 0

##  Y Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9

position_min: 0
position_endstop: 352
position_max: 352

homing_speed: 100
second_homing_speed: 15
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.9
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 330
position_min: -30
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 2

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
stealthchop_threshold: 0

#[filament_switch_sensor filament_runout_sensor]
#pause_on_runout: True
#switch_pin: PG11

[filament_motion_sensor filament_sensor]
detection_length: 40
extruder: extruder
switch_pin: PG11
pause_on_runout: true
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected

#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 22.225372078   #Bondtech 5mm Drive Gears
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
max_extrude_cross_section: 999999
max_extrude_only_distance: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 270
max_power: 1.0
min_extrude_temp: 180
# According to https://github.com/SoftFever/OrcaSlicer/wiki/Extrusion-rate-smoothing
# I reduce pressure_advance_smooth_time from 0.04 to 0.02 for finetuning the Extrusion rate smoothing
pressure_advance: 0.035
pressure_advance_smooth_time: 0.02


##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
max_error: 2880
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 240
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.


# [temperature_sensor chamber]
# sensor_type: Generic 3950
# sensor_pin: PF5
# min_temp: -30
# max_temp: 300

[z_thermal_adjust]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: -30
max_temp: 300
temp_coeff: 0.010
z_adjust_off_above: 1

#####################################################################
#   Probe
#####################################################################

[probe]
## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: PG15
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.006
samples_tolerance_retries: 10

# # uncomment to enable fast probing for measuring thermal behavior.
# samples: 1
# samples_result: median
# sample_retract_dist: 1.5
# samples_tolerance: 0.05
# samples_tolerance_retries: 10


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310,310
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
zero_reference_position: 175.00, 175.00

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN1
pin: PA8
max_power: 1.0
kick_start_time: 0.1
## CPAP Configuration
#pin: host:pwmchip0/pwm0
#enable_pin: PA8
#cycle_time: 0.00004
#hardware_pwm: true
#kick_start_time: 0.1
#off_below: 0
#tachometer_pin: ^PG12
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0005

[heater_fan hotend_fan]
##  Hotend Fan - FAN0
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[fan_generic bed_fan]
pin: PD12
max_power: 1.0
kick_start_time: 0.5

[heater_fan exhaust_fan]
pin: PD13
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 100
fan_speed: 0.15

[heater_fan nevermore_fan]
pin: PD14
max_power: 1.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 38
fan_speed: 1.0

[controller_fan controller_fan]
pin: PD15
kick_start_time: 0.5
fan_speed: 0.2

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
pin: PB10
pwm: true
shutdown_value: 0
value: 0
cycle_time: 0.01


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 28800  # 8 hours

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:
   50,25
   50,275
   300,275
   300,25
speed: 300
horizontal_move_z: 25
retries: 20
retry_tolerance: 0.0075
max_adjust: 99

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################
[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#####################################################################
#   Adxl345
#####################################################################

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 175, 175, 20  # an example

#####################################################################
#   Macro
#####################################################################

[gcode_macro PURGE_BUCKET]
gcode:
    SAVE_GCODE_STATE NAME=PURGE
    CG28
    G90                      ; absolute
    G0 X80 Y350 Z10 F4500    ; go to purge bucket
    G0 Z2 F4500              ; go to purge bucket
    {% if params.PURGE|default(0)|int == 1 %}
      G92 E0
      G1 E30 F150               ; purge some filament into bucket
    {% endif %}
    G0 X130 Y350 F5000       ; move across purge brush
    G0 X100 F5000            ; move across purge brush
    G0 X130 F5000            ; move across purge brush
    G0 X100 F5000            ; move across purge brush
    G0 X130 F5000            ; move across purge brush
    G0 X130 Y350 Z10 F1200
    RESTORE_GCODE_STATE NAME=PURGE

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-100 F600
    G1 E-100 F600

[gcode_macro LOAD_FILAMENT]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}
    G90
    G0 X60 Y350 Z10 F4500
    G91
    G1 E100 F300 
    G1 E100 F300
    PURGE_BUCKET

[gcode_macro PRINT_START]
gcode:
    SET_PIN PIN=caselight VALUE=1
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

    STATUS_HOMING
    M117 Homing
    M140 S{params.T_BED}
    M104 S{params.T_EXTRUDER}
    G28
    G90
    G0 X175 Y225 Z25 F3600

    STATUS_HEATING
    M117 Bed Heating
    M190 S{params.T_BED}
    M117 Chamber Heating
    {% if params.T_CHAMBER|default(0)|int > 0 %}
        SET_FAN_SPEED FAN=bed_fan SPEED=1.0
        TEMPERATURE_WAIT SENSOR="z_thermal_adjust" MINIMUM={params.T_CHAMBER}
    {% endif %}
    M117 Hotend Heating
    M109 S{params.T_EXTRUDER}

    STATUS_CLEANING
    M117 Cleaning
    G28
    PURGE_BUCKET

    STATUS_LEVELING
    M117 QGL
    ATTACH_PROBE_LOCK
    QUAD_GANTRY_LEVEL

    STATUS_CALIBRATING_Z
    M117 Calibrating Z
    G28
    CALIBRATE_Z

    {% set FILAMENT = params.FILAMENT|default('none')|string %}
    {% if FILAMENT == 'PLA' %}
        RESPOND MSG='Print PLA with Z_ADJUST=0.1'
        SET_GCODE_OFFSET Z_ADJUST=0.1 MOVE=1
    {% elif FILAMENT == 'ABS' %}
    {% else %}
    {% endif %}

    M117 Mesh Bed Calibrating
    STATUS_MESHING
    {% if params.SKIP_BED_MESH_CALIBRATION|default(0)|int == 0 %}
        BED_MESH_CALIBRATE
    {% endif %}
    BED_MESH_PROFILE LOAD=default

    STATUS_CLEANING
    M117 Cleaning
    DOCK_PROBE_UNLOCK
    PURGE_BUCKET PURGE=1

    STATUS_PRINTING
    M117 Printing
    G92 E0                           ; Reset Extruder
    G1 Z5.0 F5000                    ; Move Z Axis up little to prevent scratching of Heat Bed
    M83                              ; Make the E relative independant of other axis

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
    {% set z_height = [z_safe, 100]|max %}

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    SET_PIN PIN=caselight VALUE=0
    SET_FAN_SPEED FAN=bed_fan SPEED=0.0

    M400                          ; wait for buffer to clear
    G92 E0
    G1 E-10 F150                  ; retract
    G92 E0                        ; zero the extruder
    G90                           ; absolute positioning
    G0 X175 Y225 Z{z_height} F3600 ; park nozzle at rear
    TURN_OFF_HEATERS
    M84                           ; turn off motors
    M107                          ; turn off fan
    BED_MESH_CLEAR

    STATUS_READY

[gcode_macro TOGGLE_LIGHT]
gcode:
    SET_PIN PIN=caselight VALUE={0 if printer['output_pin caselight'].value else 1 }

[gcode_macro FAKE_POSITION]
gcode:
    SET_KINEMATIC_POSITION X=50 Y=50 Z=50

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro M600]
gcode:
    PAUSE                ; Pause

[gcode_macro M900]
gcode:
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+20} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=86400                                                       ; set timeout to 12 hours
        M117 Pause
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        M117 Printing
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
    M117 Ready
    STATUS_READY

[delayed_gcode startup]   
initial_duration: 1
gcode:
    M117 Ready
    STATUS_READY
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[include stealthburner_leds.cfg]

[include klicky-probe.cfg]

[include test-speed.cfg]

[include fluidd.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.982
#*# pid_ki = 1.801
#*# pid_kd = 124.800
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.391
#*# pid_ki = 1.444
#*# pid_kd = 229.263
#*#
#*# [stepper_z]
#*# position_endstop = 0.350
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.025000, 0.026250, 0.027500, 0.012500, 0.003750
#*# 	  -0.003750, 0.006250, 0.001250, -0.013750, -0.028750
#*# 	  0.002500, -0.003750, 0.000000, -0.008750, 0.056250
#*# 	  -0.011250, 0.016250, 0.018750, 0.008750, -0.012500
#*# 	  -0.008750, 0.033750, 0.055000, 0.048750, 0.028750
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
